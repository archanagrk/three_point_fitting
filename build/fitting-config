#!/bin/sh

# copied from adat-config

# fitting-config
#
# Inspired by qdp++-config from George T. Fleming
#
# Tool for retrieving configuration information about the installed version
# of ADAT.
#
# This script was copied from the qdp++-config. The latter was
# inspired by many similar scripts available in RedHat Linux,
# including gnome-config, gtk-config and xmms-config.
#
# Be on the lookout for problems with undesirable CXXFLAGS and LDFLAGS
# propagating through this script.

prefix="/Users/archanar/LQCDSoftware/three_pt_analysis/three_pt_fit_install"
exec_prefix="${prefix}"
exec_prefix_set=no

version="1.0"

extra_libs=""

fitting_cxx="g++-9"
fitting_cxxflags="-Wall -w -O3 -mtune=native -fopenmp -fbounds-check -I${prefix}/include"
fitting_ldflags=" -L${exec_prefix}/lib"
fitting_libs="-lfitting "

fitting_ranlib="ranlib"
fitting_ar="@AR@"

usage()
{
  cat <<EOF
Usage: fitting-config [OPTIONS]
Options:
  [--prefix[=DIR]]
  [--exec-prefix[=DIR]]
  [--version]
  [--cxx]
  [--cxxflags]
  [--ldflags]
  [--libs]
  [--ranlib]
  [--ar]

EOF
  exit $1
}

if test $# -eq 0; then
  usage 1 1>&2
fi

while test $# -gt 0; do
  case "$1" in
    -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
    *)    optarg= ;;
  esac

  case $1 in
    --prefix=*)
      prefix=$optarg
      if test $exec_prefix_set = no ; then
        exec_prefix=$optarg
      fi
      ;;

    --prefix)
      echo_prefix=yes
      ;;

    --exec-prefix=*)
      exec_prefix=$optarg
      exec_prefix_set=yes
      ;;

    --exec-prefix)
      echo_exec_prefix=yes
      ;;

    --version)
      echo $version
      ;;

    --cxx)
      echo $fitting_cxx
      ;;

    --cxxflags)
      echo_cxxflags=yes
      ;;

    --ldflags)
      echo_ldflags=yes
      ;;

    --libs)
      echo_libs=yes
      ;;

    --ranlib)
       echo ${fitting_ranlib}
       ;;
    
		--ar)
       echo ${fitting_ar}
       ;;
    *)
      usage 1 1>&2
      ;;

  esac
  shift
done

if test "X${echo_prefix}X" = "XyesX" ; then
  echo $prefix
fi

if test "X${echo_exec_prefix}X" = "XyesX" ; then
  echo $exec_prefix
fi

if test "X${echo_cxxflags}X" = "XyesX" ; then
  output_cxxflags=
  for i in $fitting_cxxflags ; do
    case $i in
      -I/usr/include) ;;
      -g) ;;
#     -O*) ;;
#     -W*) ;;
      *)
        case " $output_cxxflags " in
          *\ $i\ *) ;;                             # already there, skip it
          *) output_cxxflags="$output_cxxflags $i" # add it to output
        esac
    esac
  done
  echo $output_cxxflags
fi

if test "X${echo_ldflags}X" = "XyesX" ; then
  output_ldflags=
  for i in $fitting_ldflags ; do
    if test "X${i}X" != "X-I/usr/libX" ; then
      case " $output_ldflags " in
        *\ $i\ *) ;;                               # already there, skip it
        *) output_ldflags="$output_ldflags $i"     # add it to output
      esac
    fi
  done
  echo $output_ldflags
fi

# Straight out any possible duplicates, but be careful to
# get `-lfoo -lbar -lbaz' for `-lfoo -lbaz -lbar -lbaz'
# NONONO!!! DON'T DO THIS. SOMETIMES you need a -l twice
if test "X${echo_libs}X" = "XyesX" ; then
  rev_libs=
  for i in $fitting_libs ; do
    rev_libs="$i $rev_libs"
  done
  output_libs=
  for i in $rev_libs ; do
    case " $output_libs " in
      *) output_libs="$i $output_libs" ;;  # add it to output in reverse order
    esac
  done
  echo $output_libs
fi
